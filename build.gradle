plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	id "org.jetbrains.kotlin.jvm" version "2.2.10"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.

	maven { url 'https://jitpack.io' }
	maven {
		url "https://squiddev.cc/maven/"
	}
	maven { url "https://maven.terraformersmc.com/" }
	maven { url "https://maven.terraformersmc.com/releases" }
	maven { url "https://maven.shedaniel.me/" }

	// Hex Casting Dependencies

	maven {
		name "entity reach"
		url "https://maven.jamieswhiteshirt.com/libs-release/"
	}
	maven { url "https://mvn.devos.one/snapshots/" }
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}
	maven {
		name = 'Kotlin for Forge'
		url = 'https://thedarkcolour.github.io/KotlinForForge/'
	}
	maven {
		url = "https://maven.theillusivec4.top/"
	}


	maven { url = "https://maven.is-immensely.gay/releases" } // Spectrum, AEA


	maven { url = "https://api.modrinth.com/maven" } // Revelationary, Fractal
	maven { url = "https://maven.nucleoid.xyz/" } // Common Protection API
	maven { url = "https://dl.cloudsmith.io/public/klikli-dev/mods/maven/" } // Modonomicon
	maven { url = "https://maven.blamejared.com" } // JEI




}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraftVersion}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"



	modImplementation "at.petra-k.paucal:paucal-fabric-${minecraftVersion}:${paucalVersion}"
	modImplementation "vazkii.patchouli:Patchouli:${minecraftVersion}-${patchouliVersion}-FABRIC"

	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-api:${cardinalComponentsVersion}"
	include "dev.onyxstudios.cardinal-components-api:cardinal-components-api:${cardinalComponentsVersion}"

	modImplementation "dev.emi:trinkets:${trinketsVersion}"

	modImplementation("at.petra-k.hexcasting:hexcasting-fabric-${minecraftVersion}:${hexcastingVersion}") {
		// If not excluded here, calls a nonexistent method and crashes the dev client
		//exclude module: "phosphor"
	}
	modImplementation ("de.dafuqs:spectrum:${project.spectrum_version}")

	modImplementation "com.samsthenerd.inline:inline-fabric:${minecraftVersion}-${inlineVersion}"




	modLocalRuntime files("$rootProject.rootDir/libs/serialization-hooks-0.4.99999.jar")




}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = 17
	}
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}